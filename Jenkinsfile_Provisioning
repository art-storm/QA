pipeline {
    agent any
    tools {
        terraform 'terraform-1.0.6'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/art-storm/QA.git'
            }
        }

        stage('Terraform init') {
            steps {
                withCredentials([azureServicePrincipal(
                    credentialsId: 'azure-service-principle',
                    subscriptionIdVariable: 'ARM_SUBSCRIPTION_ID',
                    clientIdVariable: 'ARM_CLIENT_ID',
                    clientSecretVariable: 'ARM_CLIENT_SECRET',
                    tenantIdVariable: 'ARM_TENANT_ID'
                    )])
                {
                    sh 'cd ./terraform && terraform init'
                }
            }
        }

        stage('Terraform plan') {
            steps {
                withCredentials([azureServicePrincipal(
                    credentialsId: 'azure-service-principle',
                    subscriptionIdVariable: 'ARM_SUBSCRIPTION_ID',
                    clientIdVariable: 'ARM_CLIENT_ID',
                    clientSecretVariable: 'ARM_CLIENT_SECRET',
                    tenantIdVariable: 'ARM_TENANT_ID'
                    )])
                {
                    sh 'cd ./terraform && terraform plan'
                }
            }
        }

        stage('Terraform apply') {
            steps {
                withCredentials([azureServicePrincipal(
                    credentialsId: 'azure-service-principle',
                    subscriptionIdVariable: 'ARM_SUBSCRIPTION_ID',
                    clientIdVariable: 'ARM_CLIENT_ID',
                    clientSecretVariable: 'ARM_CLIENT_SECRET',
                    tenantIdVariable: 'ARM_TENANT_ID'
                    )])
                {
                    sh 'cd ./terraform && terraform apply --auto-approve'
                }
            }
        }

    }

}